এখানে আপনার জন্য HTML এর জন্য প্রয়োজনীয় CSS কোডের একটি কাঠামোবদ্ধ তালিকা দেওয়া হলো, সাথে প্রতিটি সেকশনের একটি করে উদাহরণ। 
এটি আপনাকে কোডিং করার সময় দ্রুত মনে রাখতে সাহায্য করবে। তবে, মনে রাখবেন যে "সমস্ত CSS কোড" বলে কিছু নেই, কারণ CSS ক্রমাগত বিকশিত হচ্ছে এবং অগণিত উপায়ে ব্যবহার করা যেতে পারে। এই তালিকাটি মৌলিক এবং প্রায়শই ব্যবহৃত বৈশিষ্ট্যগুলির উপর জোর দেবে।

---

### **১. মৌলিক স্টাইলিং এবং বিন্যাস (Basic Styling & Layout)**

#### **১.১ বক্স মডেল (Box Model)**
১.  `width`: একটি উপাদানের প্রস্থ নির্ধারণ করে।
    * উদাহরণ: `width: 200px;`
২.  `height`: একটি উপাদানের উচ্চতা নির্ধারণ করে।
    * উদাহরণ: `height: 100px;`
৩.  `margin`: একটি উপাদানের বাইরের স্থান নির্ধারণ করে।
    * উদাহরণ: `margin: 10px 20px;` (উপরে/নিচে ১০px, ডানে/বামে ২০px)
৪.  `padding`: একটি উপাদানের ভিতরের স্থান নির্ধারণ করে।
    * উদাহরণ: `padding: 15px;`
৫.  `border`: একটি উপাদানের চারপাশে বর্ডার নির্ধারণ করে।
    * উদাহরণ: `border: 1px solid black;`
৬.  `box-sizing`: একটি উপাদানের `width` এবং `height` কিভাবে গণনা করা হয় তা নির্ধারণ করে।
    * উদাহরণ: `box-sizing: border-box;`

#### **১.২ ডিসপ্লে এবং পজিশনিং (Display & Positioning)**
১.  `display`: একটি উপাদানের প্রদর্শন আচরণ নির্দিষ্ট করে।
    * উদাহরণ: `display: flex;`
২.  `position`: একটি উপাদানের পজিশনিং পদ্ধতি নির্দিষ্ট করে।
    * উদাহরণ: `position: relative;`
৩.  `top`, `right`, `bottom`, `left`: পজিশন করা উপাদানগুলির সঠিক অবস্থান নির্দিষ্ট করতে ব্যবহৃত হয়।
    * উদাহরণ: `top: 50px;`
৪.  `z-index`: একটি পজিশন করা উপাদানের স্ট্যাক অর্ডার নির্দিষ্ট করে।
    * উদাহরণ: `z-index: 10;`
৫.  `float`: একটি উপাদান বাম বা ডানে ভাসবে কিনা তা নির্দিষ্ট করে।
    * উদাহরণ: `float: left;`
৬.  `clear`: নির্দিষ্ট করে কোন উপাদানগুলি ক্লিয়ার করা উপাদানের পাশে এবং কোন দিকে ভাসতে পারে।
    * উদাহরণ: `clear: both;`
৭.  `overflow`: যদি কন্টেন্ট একটি উপাদানের বক্সের বাইরে চলে যায় তাহলে কী ঘটবে তা নির্দিষ্ট করে।
    * উদাহরণ: `overflow: auto;`

#### **১.৩ ফ্লেক্সবক্স (Flexbox - নমনীয় বক্স বিন্যাসের জন্য)**
১.  `display: flex;`: একটি ফ্লেক্স কন্টেইনার শুরু করে।
    * উদাহরণ: `display: flex;`
২.  `flex-direction`: ফ্লেক্স আইটেমগুলির দিক নির্দিষ্ট করে।
    * উদাহরণ: `flex-direction: column;`
৩.  `justify-content`: মূল অক্ষ বরাবর ফ্লেক্স আইটেমগুলিকে সারিবদ্ধ করে।
    * উদাহরণ: `justify-content: center;`
৪.  `align-items`: ক্রস অক্ষ বরাবর ফ্লেক্স আইটেমগুলিকে সারিবদ্ধ করে।
    * উদাহরণ: `align-items: center;`
৫.  `flex-wrap`: ফ্লেক্স আইটেমগুলি মোড়ানো উচিত কিনা তা নির্দিষ্ট করে।
    * উদাহরণ: `flex-wrap: wrap;`
৬.  `gap`: ফ্লেক্স আইটেমগুলির মধ্যে ব্যবধান নির্ধারণ করে।
    * উদাহরণ: `gap: 10px;`

#### **১.৪ গ্রিড (Grid - ২ডি গ্রিড বিন্যাসের জন্য)**
১.  `display: grid;`: একটি গ্রিড কন্টেইনার শুরু করে।
    * উদাহরণ: `display: grid;`
২.  `grid-template-columns`: গ্রিডের কলামগুলি সংজ্ঞায়িত করে।
    * উদাহরণ: `grid-template-columns: 1fr 1fr 1fr;`
৩.  `grid-template-rows`: গ্রিডের সারিগুলি সংজ্ঞায়িত করে।
    * উদাহরণ: `grid-template-rows: auto 100px;`
৪.  `grid-gap`: গ্রিড কোষগুলির মধ্যে ব্যবধান নির্ধারণ করে।
    * উদাহরণ: `grid-gap: 5px;`
৫.  `grid-column`: কলামগুলির মধ্যে একটি গ্রিড আইটেমের জন্য শুরু এবং শেষ গ্রিড লাইন নির্দিষ্ট করে।
    * উদাহরণ: `grid-column: 1 / 3;`
৬.  `grid-row`: সারিগুলির মধ্যে একটি গ্রিড আইটেমের জন্য শুরু এবং শেষ গ্রিড লাইন নির্দিষ্ট করে।
    * উদাহরণ: `grid-row: 2;`

---

### **২. টাইপোগ্রাফি এবং টেক্সট (Typography & Text)**

১.  `font-family`: একটি উপাদানের ফন্ট নির্ধারণ করে।
    * উদাহরণ: `font-family: Arial, sans-serif;`
২.  `font-size`: ফন্টের আকার নির্ধারণ করে।
    * উদাহরণ: `font-size: 16px;`
৩.  `font-weight`: ফন্টের পুরুত্ব নির্ধারণ করে।
    * উদাহরণ: `font-weight: bold;`
৪.  `font-style`: ফন্টের স্টাইল নির্ধারণ করে।
    * উদাহরণ: `font-style: italic;`
৫.  `color`: টেক্সটের রঙ নির্ধারণ করে।
    * উদাহরণ: `color: #333;`
৬.  `text-align`: একটি উপাদানের মধ্যে টেক্সট সারিবদ্ধ করে।
    * উদাহরণ: `text-align: center;`
৭.  `line-height`: প্রতিটি টেক্সট লাইনের উচ্চতা নির্ধারণ করে।
    * উদাহরণ: `line-height: 1.5;`
৮.  `text-decoration`: টেক্সটে সজ্জা যোগ করে।
    * উদাহরণ: `text-decoration: underline;`
৯.  `letter-spacing`: অক্ষরগুলির মধ্যে স্থান নির্ধারণ করে।
    * উদাহরণ: `letter-spacing: 1px;`
১০. `word-spacing`: শব্দগুলির মধ্যে স্থান নির্ধারণ করে।
    * উদাহরণ: `word-spacing: 3px;`
১১. `text-transform`: টেক্সটের ক্যাপিটালাইজেশন নিয়ন্ত্রণ করে।
    * উদাহরণ: `text-transform: uppercase;`
১২. `white-space`: একটি উপাদানের মধ্যে হোয়াইটস্পেস কিভাবে পরিচালিত হয় তা নিয়ন্ত্রণ করে।
    * উদাহরণ: `white-space: nowrap;`

---

### **৩. রঙ এবং ব্যাকগ্রাউন্ড (Colors & Backgrounds)**

১.  `background-color`: একটি উপাদানের পটভূমির রঙ নির্ধারণ করে।
    * উদাহরণ: `background-color: lightblue;`
২.  `background-image`: একটি উপাদানের জন্য এক বা একাধিক পটভূমি ছবি নির্ধারণ করে।
    * উদাহরণ: `background-image: url('image.png');`
৩.  `background-repeat`: একটি পটভূমি ছবি পুনরাবৃত্তি হয় কিনা তা নির্দিষ্ট করে।
    * উদাহরণ: `background-repeat: no-repeat;`
৪.  `background-position`: একটি পটভূমি ছবির শুরু করার অবস্থান নির্ধারণ করে।
    * উদাহরণ: `background-position: center top;`
৫.  `background-size`: পটভূমি ছবিগুলির আকার নির্দিষ্ট করে।
    * উদাহরণ: `background-size: cover;`
৬.  `background`: সমস্ত ব্যাকগ্রাউন্ড বৈশিষ্ট্যগুলির জন্য সংক্ষিপ্ত রূপ।
    * উদাহরণ: `background: #f0f0f0 url('bg.png') no-repeat center;`
৭.  `opacity`: একটি উপাদানের অস্বচ্ছতা স্তর নির্ধারণ করে।
    * উদাহরণ: `opacity: 0.7;`

---

### **৪. ভিজ্যুয়াল ইফেক্ট এবং ইন্টারঅ্যাক্টিভিটি (Visual Effects & Interactivity)**

১.  `transition`: ট্রানজিশন প্রভাব নির্দিষ্ট করে।
    * উদাহরণ: `transition: background-color 0.3s ease-in-out;`
২.  `transform`: একটি উপাদানে 2D বা 3D রূপান্তর প্রয়োগ করে।
    * উদাহরণ: `transform: rotate(45deg);`
৩.  `box-shadow`: একটি উপাদানের ফ্রেমের চারপাশে শ্যাডো প্রভাব যোগ করে।
    * উদাহরণ: `box-shadow: 2px 2px 5px rgba(0,0,0,0.3);`
৪.  `text-shadow`: টেক্সটে শ্যাডো প্রভাব যোগ করে।
    * উদাহরণ: `text-shadow: 1px 1px 2px gray;`
৫.  `cursor`: একটি উপাদানের উপর পয়েন্ট করার সময় প্রদর্শিত কার্সারের ধরন নির্দিষ্ট করে।
    * উদাহরণ: `cursor: pointer;`
৬.  `outline`: উপাদানগুলির চারপাশে একটি আউটলাইন আঁকে।
    * উদাহরণ: `outline: 2px dotted blue;`
৭.  `visibility`: একটি উপাদানকে তার বিন্যাসকে প্রভাবিত না করে লুকায় বা দেখায়।
    * উদাহরণ: `visibility: hidden;`

---

### **৫. তালিকা (Lists)**

১.  `list-style-type`: তালিকার আইটেম মার্কারের ধরন নির্দিষ্ট করে।
    * উদাহরণ: `list-style-type: square;`
২.  `list-style-image`: তালিকার আইটেম মার্কার হিসাবে একটি ছবি নির্দিষ্ট করে।
    * উদাহরণ: `list-style-image: url('marker.png');`
৩.  `list-style-position`: তালিকার আইটেম মার্কারগুলির অবস্থান নির্দিষ্ট করে।
    * উদাহরণ: `list-style-position: inside;`
৪.  `list-style`: সমস্ত তালিকা বৈশিষ্ট্যগুলির জন্য সংক্ষিপ্ত রূপ।
    * উদাহরণ: `list-style: none;`

---

### **৬. টেবিল (Tables)**

১.  `border-collapse`: টেবিলের বর্ডারগুলি একক বর্ডারে একত্রিত হবে নাকি আলাদা থাকবে তা নির্দিষ্ট করে।
    * উদাহরণ: `border-collapse: collapse;`
২.  `border-spacing`: সংলগ্ন কোষগুলির বর্ডারগুলির মধ্যে দূরত্ব নির্দিষ্ট করে।
    * উদাহরণ: `border-spacing: 5px;`
৩.  `caption-side`: একটি টেবিল ক্যাপশনের স্থান নির্ধারণ করে।
    * উদাহরণ: `caption-side: bottom;`
৪.  `empty-cells`: একটি টেবিলের খালি কোষগুলির জন্য বর্ডার এবং পটভূমি প্রদর্শন করবে কিনা তা নির্দিষ্ট করে।
    * উদাহরণ: `empty-cells: hide;`
৫.  `table-layout`: টেবিলের কোষ, সারি এবং কলামগুলি সাজানোর জন্য ব্যবহৃত অ্যালগরিদম নির্ধারণ করে।
    * উদাহরণ: `table-layout: fixed;`

---

### **৭. সিউডো-ক্লাস এবং সিউডো-এলিমেন্টস (Pseudo-classes & Pseudo-elements - উপাদানগুলির নির্দিষ্ট অবস্থা/অংশগুলির জন্য)**

#### **৭.১ সিউডো-ক্লাস (Pseudo-classes)**
১.  `:hover`: ব্যবহারকারী যখন একটি উপাদানের উপর মাউস নিয়ে যায় তখন স্টাইল করে।
    * উদাহরণ: `a:hover { color: red; }`
২.  `:active`: ব্যবহারকারী যখন একটি উপাদানকে সক্রিয় করে তখন স্টাইল করে।
    * উদাহরণ: `button:active { background-color: darkblue; }`
৩.  `:focus`: যখন একটি উপাদান ফোকাস পায় তখন স্টাইল করে।
    * উদাহরণ: `input:focus { border-color: blue; }`
৪.  `:visited`: ব্যবহারকারী যে লিঙ্কটি পরিদর্শন করেছে তা স্টাইল করে।
    * উদাহরণ: `a:visited { color: purple; }`
৫.  `:link`: একটি অপঠিত লিঙ্ক স্টাইল করে।
    * উদাহরণ: `a:link { color: blue; }`
৬.  `:nth-child(n)`: ভাইবোনদের মধ্যে তাদের অবস্থানের উপর ভিত্তি করে উপাদানগুলিকে স্টাইল করে।
    * উদাহরণ: `li:nth-child(even) { background-color: #f2f2f2; }`
৭.  `:first-child`: একটি উপাদানের প্রথম সন্তানকে স্টাইল করে।
    * উদাহরণ: `p:first-child { font-weight: bold; }`
৮.  `:last-child`: একটি উপাদানের শেষ সন্তানকে স্টাইল করে।
    * উদাহরণ: `li:last-child { margin-bottom: 0; }`
৯.  `:not(selector)`: নির্দিষ্ট সিলেক্টর নয় এমন প্রতিটি উপাদান নির্বাচন করে।
    * উদাহরণ: `div:not(.header) { padding: 10px; }`

#### **৭.২ সিউডো-এলিমেন্টস (Pseudo-elements)**
১.  `::before`: একটি উপাদানের কন্টেন্টের আগে কন্টেন্ট ঢোকায়।
    * উদাহরণ: `h2::before { content: "➤ "; }`
২.  `::after`: একটি উপাদানের কন্টেন্টের পরে কন্টেন্ট ঢোকায়।
    * উদাহরণ: `a::after { content: " ↗"; }`
৩.  `::first-line`: একটি ব্লক-লেভেল উপাদানের প্রথম লাইন স্টাইল করে।
    * উদাহরণ: `p::first-line { font-variant: small-caps; }`
৪.  `::first-letter`: একটি ব্লক-লেভেল উপাদানের প্রথম অক্ষর স্টাইল করে।
    * উদাহরণ: `p::first-letter { font-size: 200%; }`
৫.  `::selection`: একটি ব্যবহারকারী দ্বারা নির্বাচিত একটি উপাদানের অংশ স্টাইল করে।
    * উদাহরণ: `::selection { background-color: yellow; color: black; }`

---

### **৮. রেসপনসিভ ডিজাইন এবং মিডিয়া কোয়েরি (Responsive Design & Media Queries)**

১.  `@media`: বিভিন্ন মিডিয়া প্রকার/ডিভাইসের জন্য বিভিন্ন স্টাইল প্রয়োগ করতে ব্যবহৃত নিয়ম।
    * উদাহরণ: `@media screen and (max-width: 768px) { body { font-size: 14px; } }`
২.  `viewport` মেটা ট্যাগ (HTML এ): রেসপনসিভ ডিজাইনের জন্য অপরিহার্য।
    * উদাহরণ: `<meta name="viewport" content="width=device-width, initial-scale=1.0">`

---

এই উদাহরণ সহ তালিকাটি আপনাকে CSS বৈশিষ্ট্যগুলি দ্রুত বুঝতে এবং মনে রাখতে সাহায্য করবে। আপনি কোন নির্দিষ্ট CSS বৈশিষ্ট্য সম্পর্কে আরও জানতে চান?
